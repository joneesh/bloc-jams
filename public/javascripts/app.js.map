{"version":3,"sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js","app/scripts/profile.js"],"names":[],"mappingszvjBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA","file":"public/javascripts/app.js","sourcesContent":["// Example Album\n var albumPicasso = {\n   name: 'The Colors',\n   artist: 'Pablo Picasso',\n   label: 'Cubism',\n   year: '1881',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Blue', length: '4:26' },\n       { name: 'Green', length: '3:14' },\n       { name: 'Red', length: '5:01' },\n       { name: 'Pink', length: '3:21'},\n       { name: 'Magenta', length: '2:15'}\n     ]\n };\n \n // Another Example Album\n var albumMarconi = {\n   name: 'The Telephone',\n   artist: 'Guglielmo Marconi',\n   label: 'EM',\n   year: '1909',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Hello, Operator?', length: '1:01' },\n       { name: 'Ring, ring, ring', length: '5:01' },\n       { name: 'Fits in your pocket', length: '3:21'},\n       { name: 'Can you hear me now?', length: '3:14' },\n       { name: 'Wrong phone number', length: '2:15'}\n     ]\n };\n\nvar currentlyPlayingSong = null;\n\nvar createSongRow = function(songNumber, songName, songLength) {\n  var template =\n      '<tr>'\n      + '  <td class=\"song-number col-md-1\" data-song-number=\"' + songNumber + '\">' + songNumber + '</td>'\n      +'  <td class=\"col-md-9\">' + songName + '</td>'\n      +'  <td class=\"col-md-2\">' + songLength + '</td>'\n      +'</tr>'\n      ;\n  // Instead of returning the row immediately, we'll attach hover\n  // functionality to it first.\n   var $row = $(template);\n \n   var onHover = function(event) {\n     songNumberCell = $(this).find('.song-number');\n    var songNumber = songNumberCell.data('song-number');\n    if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n    }\n  };\n \n   var offHover = function(event) {\n      var songNumberCell = $(this).find('.song-number');\n      var songNumber = songNumberCell.data('song-number');\n      if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html(songNumber);\n    }\n\n   $row.hover(onHover, offHover);\n   return $row;      \n\n   };\n \n // Toggle the play, pause, and song number based on the button clicked.\n   var clickHandler = function(event) {\n     songNumber = $(this).data('song-number');\n \n     if (currentlyPlayingSong !== null) {\n       // Revert to song number for currently playing song because user started playing new song.\n       currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n       currentlyPlayingCell.html(currentlyPlayingSong);\n     }\n \n     if (currentlyPlayingSong !== songNumber) {\n       // Switch from Play -> Pause button to indicate new song is playing.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n       currentlyPlayingSong = songNumber;\n     }\n     else if (currentlyPlayingSong === songNumber) {\n       // Switch from Pause -> Play button to pause currently playing song.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n       currentlyPlayingSong = null;\n     }\n   };\n\n\n    // Toggle the play, pause, and song number based on the button clicked.\n   var clickHandler = function(event) {\n     var songNumber = $(this).data('song-number');\n\n     if (currentlyPlayingSong !== null) {\n       // Revert to song number for currently playing song because user started playing new song.\n       var currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n       currentlyPlayingCell.html(currentlyPlayingSong);\n     }\n \n     if (currentlyPlayingSong !== songNumber) {\n       // Switch from Play -> Pause button to indicate new song is playing.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n       currentlyPlayingSong = songNumber;\n     }\n     else if (currentlyPlayingSong === songNumber) {\n       // Switch from Pause -> Play button to pause currently playing song.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n       currentlyPlayingSong = null;\n     }\n   };\n\n\n\n// line to save changes\n   $row.find('.song-number').click(clickHandler);\n   $row.hover(onHover, offHover);\n   return $row;\n\n  };\n\nvar changeAlbumView = function(album) {\n  // Update the album title\n  var $albumTitle = $('.album-title');\n  $albumTitle.text(album.name);\n\n  // Update the albut artist\n  var $albumArtist = $('.album-artist');\n  $albumArtist.text(album.artist);\n\n  // Update the meta information\n  var $albumMeta = $('.album-meta-info');\n  $albumMeta.text(album.year + \" on \" + album.lable);\n\n  // Update the album image\n  var $albumImage = $('.album-image img');\n  $albumImage.attr('src', album.albumArtUrl);\n\n  // Update the Song List\n  var $songList = $(\".album-song-listing\");\n  $songList.empty();\n  var songs = album.songs;\n  for (var i = 0; i < songs.length; i++) {\n    var songData = songs[i];\n    var $newRow = createSongRow(i + 1, songData.name, songData.length);\n    $songList.append($newRow);\n  }\n\n};\n\n// below the changeAlbumView function\n\nvar updateSeekPercentage = function($seekBar, event) {\n   var barWidth = $seekBar.width();\n   var offsetX = event.pageX - $seekBar.offset().left;\n \n   var offsetXPercent = (offsetX  / $seekBar.width()) * 100;\n   offsetXPercent = Math.max(0, offsetXPercent);\n   offsetXPercent = Math.min(100, offsetXPercent);\n \n   var percentageString = offsetXPercent + '%';\n   $seekBar.find('.fill').width(percentageString);\n   $seekBar.find('.thumb').css({left: percentageString});\n }\n\nvar setupSeekBars = function() {\n \n   $seekBars = $('.player-bar .seek-bar');\n   $seekBars.click(function(event) {\n     updateSeekPercentage($(this), event);\n   });\n   $seekBars.find('.thumb').mousedown(function(event) {\n    var $seekBar = $(this).parent();\n\n    $seekBar.addClass('no-animate');\n\n    $(document).bind('mousemove.thumb', function(event) {\n      updateSeekPercentage($seekBar, event);\n    });\n\n    //cleanup\n    $(document).bind('mouseup.thumb', function() {\n      $seekBar.removeClass('no-animate');\n\n      $(document).unbind('mousemove.thumb');\n      $(document).unbind('mouseup.thumb');\n    });\n\n   });\n\n };\n\n// This 'if' condition is used to prevent the jQuery modifications\n// from happening on non-album view pages.\n// - Use a regex to validate that the url has \"/album\" in its path.\nif (document.URL.match(/\\/album.html/)) {\n  // Wait until the HTML is fully processed.\n  $(document).ready(function() {\n       changeAlbumView(albumMarconi)\n       setupSeekBars();\n  });\n}\n"," //require('./landing');\r\n //require('./album');\r\n //require('./collection');\r\n //require('./profile');\r\n \r\n\r\n // Example album.\r\n var albumPicasso = {\r\n   name: 'The Colors',\r\n   artist: 'Pablo Picasso',\r\n   label: 'Cubism',\r\n   year: '1881',\r\n   albumArtUrl: '/images/album-placeholder.png',\r\n \r\n   songs: [\r\n       { name: 'Blue', length: '4:26' },\r\n       { name: 'Green', length: '3:14' },\r\n       { name: 'Red', length: '5:01' },\r\n       { name: 'Pink', length: '3:21'},\r\n       { name: 'Magenta', length: '2:15'}\r\n     ]\r\n };\r\n \r\n\r\n\r\n\r\n blocJams = angular.module('BlocJams', ['ui.router']);\r\n\r\n blocJams.config(['$stateProvider', '$locationProvider', function($stateProvider, $locationProvider) {\r\n   $locationProvider.html5Mode(true);\r\n \r\n   $stateProvider.state('landing', {\r\n     url: '/',\r\n     controller: 'Landing.controller',\r\n     templateUrl: '/templates/landing.html'\r\n   });\r\n   \r\n   $stateProvider.state('collection', {\r\n     url: '/collection',\r\n     controller: 'Collection.controller',\r\n     templateUrl: '/templates/collection.html'\r\n   });\r\n\r\n   $stateProvider.state('album', {\r\n     url: '/album',\r\n     templateUrl: '/templates/album.html',\r\n     controller: 'Album.controller'\r\n   });\r\n   \r\n }]);\r\n\r\n // This is a cleaner way to call the controller than crowding it on the module definition.\r\n   blocJams.controller('Landing.controller', ['$scope', function($scope) {\r\n   $scope.subText = \"Turn it music up!\";\r\n\r\n\r\n   $scope.subTextClicked = function() {\r\n     $scope.subText += '!';\r\n   };\r\n\r\n   \r\n\r\n   $scope.albumURLs = [\r\n     '/images/album-placeholders/album-1.jpg',\r\n     '/images/album-placeholders/album-2.jpg',\r\n     '/images/album-placeholders/album-3.jpg',\r\n     '/images/album-placeholders/album-4.jpg',\r\n     '/images/album-placeholders/album-5.jpg',\r\n     '/images/album-placeholders/album-6.jpg',\r\n     '/images/album-placeholders/album-7.jpg',\r\n     '/images/album-placeholders/album-8.jpg',\r\n     '/images/album-placeholders/album-9.jpg',\r\n   ];\r\n\r\n   }]);\r\n\r\n blocJams.controller('Collection.controller', ['$scope', function($scope) {\r\n   $scope.albums = [];\r\n      for (var i = 0; i < 33; i++) {\r\n     $scope.albums.push(angular.copy(albumPicasso));\r\n   }\r\n }]);\r\n\r\n   \r\n  blocJams.controller('Album.controller', ['$scope', function($scope) {\r\n   $scope.album = angular.copy(albumPicasso);\r\n \r\n   var hoveredSong = null;\r\n   \r\n \r\n   $scope.onHoverSong = function(song) {\r\n     hoveredSong = song;\r\n   };\r\n\r\n   $scope.offHoverSong = function(song) {\r\n     hoveredSong = null;\r\n   };\r\n\r\n  $scope.getSongState = function(song) {\r\n     if (song === SongPlayer.currentSong && SongPlayer.playing) {\r\n       return 'playing';\r\n     }\r\n     else if (song === hoveredSong) {\r\n       return 'hovered';\r\n     }\r\n     return 'default';\r\n   };\r\n\r\n    $scope.playSong = function(song) {\r\n     SongPlayer.setSong($scope.album, song);\r\n     SongPlayer.play();\r\n    };\r\n \r\n    $scope.pauseSong = function(song) {\r\n      SongPlayer.pause();\r\n    };\r\n\r\n }]);\r\n\r\n blocJams.controller('Album.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\r\n   $scope.album = angular.copy(albumPicasso);\r\n }]);\r\n\r\nblocJams.controller('PlayerBar.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\r\n   $scope.songPlayer = SongPlayer;\r\n }]);\r\n\r\n blocJams.service('SongPlayer', function() {\r\n      var trackIndex = function(album, song) {\r\n     return album.songs.indexOf(song);\r\n   };\r\n\r\n\r\n   return {\r\n     currentSong: null,\r\n     currentAlbum: null,\r\n     playing: false,\r\n \r\n     play: function() {\r\n       this.playing = true;\r\n     },\r\n     pause: function() {\r\n       this.playing = false;\r\n     },\r\n\r\n     next: function() {\r\n       var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\r\n       currentTrackIndex++;\r\n       if (currentTrackIndex >= this.currentAlbum.songs.length) {\r\n         currentTrackIndex = 0;\r\n       }\r\n       this.currentSong = this.currentAlbum.songs[currentTrackIndex];\r\n     },\r\n          previous: function() {\r\n       var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\r\n       currentTrackIndex--;\r\n       if (currentTrackIndex < 0) {\r\n         currentTrackIndex = this.currentAlbum.songs.length - 1;\r\n       }\r\n \r\n       this.currentSong = this.currentAlbum.songs[currentTrackIndex];\r\n     },\r\n     setSong: function(album, song) {\r\n       this.currentAlbum = album;\r\n       this.currentSong = song;\r\n     }\r\n   };\r\n });","if (document.URL.match(/\\/collection.html/)) {\n   // Wait until the HTML is fully processed.\n   $(document).ready(function() {\n     var $collection = $(\".collection-container .row\");\n     $collection.empty();\n     for (var i = 0; i < 33; i++) {\n       var $newThumbnail = buildAlbumThumbnail();\n       $collection.append($newThumbnail);\n     }\n     updateCollectionView();\n  });\n }\n\n var buildAlbumThumbnail = function() {\n    var template =\n        '<div class=\"collection-album-container col-md-2\">'\n\n      + '  <div class=\"collection-album-image-container\">'\n   + '        <img src=\"/images/album-placeholder.png\"/>'\n   + '     </div>'\n\n      + '  <div class=\"caption album-collection-info\">'\n      + '    <p>'\n      + '      <a class=\"album-name\" href=\"/album.html\"> Album Name </a>'\n      + '      <br/>'\n      + '      <a href=\"/album.html\"> Artist name </a>'\n      + '      <br/>'\n      + '      X songs'\n      + '      <br/>'\n      + '    </p>'\n      + '  </div>'\n      + '</div>'\n    + '  </div>';\n   return $(template);\n };\n\n\n  var buildAlbumOverlay = function(albumURL) {\n    var template =\n        '<div class=\"collection-album-image-overlay\">'\n      + '  <div class=\"collection-overlay-content\">'\n      + '    <a class=\"collection-overlay-button\" href=\"' + albumURL + '\">'\n      + '      <i class=\"fa fa-play\"></i>'\n      + '    </a>'\n      + '    &nbsp;'\n      + '    <a class=\"collection-overlay-button\">'\n      + '      <i class=\"fa fa-plus\"></i>'\n      + '    </a>'\n      + '  </div>'\n      + '</div>'\n      ;\n    return $(template);\n  };\n\n  var updateCollectionView = function() {\n      var $collection = $(\".collection-container .row\");\n      $collection.empty();\n\n      for (var i = 0; i < 33; i++) {\n        var $newThumbnail = buildAlbumThumbnail();\n        $collection.append($newThumbnail);\n      }\n\n       var onHover = function(event) {\n         $(this).append(buildAlbumOverlay(\"/album.html\"));\n       };\n\n         var offHover = function(event) {\n        $(this).find('.collection-album-image-overlay').remove();\n      };\n\n          $collection.find('.collection-album-image-container').hover(onHover,offHover);\n};\n\n   \n"," $(document).ready(function() {\r\n\t$('.hero-content h3').click(function(){\r\n    subText = $(this).text();\r\n    $(this).text(subText + \"!\");\t\r\n    console.log('Click action triggered.');\r\n});\r\n var onHoverAction = function(event) {\r\n     console.log('Hover action triggered.');\r\n     $(this).animate({'margin-top': '10px'});\r\n   };\r\n \r\n   var offHoverAction = function(event) {\r\n     console.log('Off-hover action triggered.');\r\n     $(this).animate({'margin-top': '0px'});\r\n   };\r\n \r\n   $('.selling-points .point').hover(onHoverAction, offHoverAction);\r\n});","var tabsContainer = \".user-profile-tabs-container\"\n var selectTabHandler = function(event) {\n   $tab = $(this);\n   $(tabsContainer + \" li\").removeClass('active');\n   $tab.parent().addClass('active');\n   selectedTabName = $tab.attr('href');\n   console.log(selectedTabName);\n   $(\".tab-pane\").addClass('hidden');\n   $(selectedTabName).removeClass('hidden');\n   event.preventDefault();\n };\n \n if (document.URL.match(/\\/profile.html/)) {\n   $(document).ready(function() {\n     var $tabs = $(tabsContainer + \" a\");\n     $tabs.click(selectTabHandler);\n     $tabs[0].click();\n   });\n }"]}