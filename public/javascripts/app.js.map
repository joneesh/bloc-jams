{"version":3,"sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js","app/scripts/profile.js"],"names":[],"mappingszjBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA","file":"public/javascripts/app.js","sourcesContent":["// Example Album\n var albumPicasso = {\n   name: 'The Colors',\n   artist: 'Pablo Picasso',\n   label: 'Cubism',\n   year: '1881',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Blue', length: '4:26' },\n       { name: 'Green', length: '3:14' },\n       { name: 'Red', length: '5:01' },\n       { name: 'Pink', length: '3:21'},\n       { name: 'Magenta', length: '2:15'}\n     ]\n };\n \n // Another Example Album\n var albumMarconi = {\n   name: 'The Telephone',\n   artist: 'Guglielmo Marconi',\n   label: 'EM',\n   year: '1909',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Hello, Operator?', length: '1:01' },\n       { name: 'Ring, ring, ring', length: '5:01' },\n       { name: 'Fits in your pocket', length: '3:21'},\n       { name: 'Can you hear me now?', length: '3:14' },\n       { name: 'Wrong phone number', length: '2:15'}\n     ]\n };\n\nvar currentlyPlayingSong = null;\n\nvar createSongRow = function(songNumber, songName, songLength) {\n  var template =\n      '<tr>'\n      + '  <td class=\"song-number col-md-1\" data-song-number=\"' + songNumber + '\">' + songNumber + '</td>'\n      +'  <td class=\"col-md-9\">' + songName + '</td>'\n      +'  <td class=\"col-md-2\">' + songLength + '</td>'\n      +'</tr>'\n      ;\n  // Instead of returning the row immediately, we'll attach hover\n  // functionality to it first.\n   var $row = $(template);\n \n   var onHover = function(event) {\n     songNumberCell = $(this).find('.song-number');\n    var songNumber = songNumberCell.data('song-number');\n    if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n    }\n  };\n \n   var offHover = function(event) {\n      var songNumberCell = $(this).find('.song-number');\n      var songNumber = songNumberCell.data('song-number');\n      if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html(songNumber);\n    }\n\n   $row.hover(onHover, offHover);\n   return $row;      \n\n   };\n \n // Toggle the play, pause, and song number based on the button clicked.\n   var clickHandler = function(event) {\n     songNumber = $(this).data('song-number');\n \n     if (currentlyPlayingSong !== null) {\n       // Revert to song number for currently playing song because user started playing new song.\n       currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n       currentlyPlayingCell.html(currentlyPlayingSong);\n     }\n \n     if (currentlyPlayingSong !== songNumber) {\n       // Switch from Play -> Pause button to indicate new song is playing.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n       currentlyPlayingSong = songNumber;\n     }\n     else if (currentlyPlayingSong === songNumber) {\n       // Switch from Pause -> Play button to pause currently playing song.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n       currentlyPlayingSong = null;\n     }\n   };\n\n\n    // Toggle the play, pause, and song number based on the button clicked.\n   var clickHandler = function(event) {\n     var songNumber = $(this).data('song-number');\n\n     if (currentlyPlayingSong !== null) {\n       // Revert to song number for currently playing song because user started playing new song.\n       var currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n       currentlyPlayingCell.html(currentlyPlayingSong);\n     }\n \n     if (currentlyPlayingSong !== songNumber) {\n       // Switch from Play -> Pause button to indicate new song is playing.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n       currentlyPlayingSong = songNumber;\n     }\n     else if (currentlyPlayingSong === songNumber) {\n       // Switch from Pause -> Play button to pause currently playing song.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n       currentlyPlayingSong = null;\n     }\n   };\n\n\n\n// line to save changes\n   $row.find('.song-number').click(clickHandler);\n   $row.hover(onHover, offHover);\n   return $row;\n\n  };\n\nvar changeAlbumView = function(album) {\n  // Update the album title\n  var $albumTitle = $('.album-title');\n  $albumTitle.text(album.name);\n\n  // Update the albut artist\n  var $albumArtist = $('.album-artist');\n  $albumArtist.text(album.artist);\n\n  // Update the meta information\n  var $albumMeta = $('.album-meta-info');\n  $albumMeta.text(album.year + \" on \" + album.lable);\n\n  // Update the album image\n  var $albumImage = $('.album-image img');\n  $albumImage.attr('src', album.albumArtUrl);\n\n  // Update the Song List\n  var $songList = $(\".album-song-listing\");\n  $songList.empty();\n  var songs = album.songs;\n  for (var i = 0; i < songs.length; i++) {\n    var songData = songs[i];\n    var $newRow = createSongRow(i + 1, songData.name, songData.length);\n    $songList.append($newRow);\n  }\n\n};\n\n// below the changeAlbumView function\n\nvar updateSeekPercentage = function($seekBar, event) {\n   var barWidth = $seekBar.width();\n   var offsetX = event.pageX - $seekBar.offset().left;\n \n   var offsetXPercent = (offsetX  / $seekBar.width()) * 100;\n   offsetXPercent = Math.max(0, offsetXPercent);\n   offsetXPercent = Math.min(100, offsetXPercent);\n \n   var percentageString = offsetXPercent + '%';\n   $seekBar.find('.fill').width(percentageString);\n   $seekBar.find('.thumb').css({left: percentageString});\n }\n\nvar setupSeekBars = function() {\n \n   $seekBars = $('.player-bar .seek-bar');\n   $seekBars.click(function(event) {\n     updateSeekPercentage($(this), event);\n   });\n   $seekBars.find('.thumb').mousedown(function(event) {\n    var $seekBar = $(this).parent();\n\n    $seekBar.addClass('no-animate');\n\n    $(document).bind('mousemove.thumb', function(event) {\n      updateSeekPercentage($seekBar, event);\n    });\n\n    //cleanup\n    $(document).bind('mouseup.thumb', function() {\n      $seekBar.removeClass('no-animate');\n\n      $(document).unbind('mousemove.thumb');\n      $(document).unbind('mouseup.thumb');\n    });\n\n   });\n\n };\n\n// This 'if' condition is used to prevent the jQuery modifications\n// from happening on non-album view pages.\n// - Use a regex to validate that the url has \"/album\" in its path.\nif (document.URL.match(/\\/album.html/)) {\n  // Wait until the HTML is fully processed.\n  $(document).ready(function() {\n       changeAlbumView(albumMarconi)\n       setupSeekBars();\n  });\n}\n","var albumPicasso = {\r\n  name: 'The Colors',\r\n  artist: 'Pablo Picasso',\r\n  label: 'Cubism',\r\n  year: '1881',\r\n  albumArtUrl: '/images/album-placeholder.png',\r\n\r\n  songs: [\r\n      { name: 'Blue', length: 163.38, audioUrl: '/music/placeholders/blue' },\r\n      { name: 'Green', length: 105.66 , audioUrl: '/music/placeholders/green' },\r\n      { name: 'Red', length: 270.14, audioUrl: '/music/placeholders/red' },\r\n      { name: 'Pink', length: 154.81, audioUrl: '/music/placeholders/pink' },\r\n      { name: 'Magenta', length: 375.92, audioUrl: '/music/placeholders/magenta' }\r\n  ]\r\n};\r\n\r\nblocJams = angular.module('BlocJams', ['ui.router']);\r\n\r\nblocJams.config(['$stateProvider', '$locationProvider', function($stateProvider, $locationProvider) {\r\n  $locationProvider.html5Mode(true);\r\n\r\n  $stateProvider.state('landing', {\r\n    url: '/',\r\n    controller: 'Landing.controller',\r\n    templateUrl: '/templates/landing.html'\r\n  });\r\n\r\n  $stateProvider.state('collection', {\r\n    url: '/collection',\r\n    controller: 'Collection.controller',\r\n    templateUrl: '/templates/collection.html'\r\n  });  \r\n\r\n  $stateProvider.state('album', {\r\n    url: '/album',\r\n    controller: 'Album.controller',\r\n    templateUrl: '/templates/album.html'\r\n  });    \r\n}]);\r\n \r\nblocJams.controller('Landing.controller', ['$scope', function($scope) {\r\n  $scope.heroText = \"Bloc Jams\";\r\n  $scope.subText = \"Turn the music up!\";\r\n\r\n  $scope.subTextClicked = function() {\r\n    $scope.subText += '!';\r\n  };\r\n\r\n  function shuffle(o){ \r\n    for(var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\r\n    return o;\r\n  };\r\n\r\n  $scope.albumShuffle = function() {\r\n    shuffle($scope.albumURLs);  \r\n  };\r\n\r\n  $scope.albumURLs = [\r\n    '/images/album-placeholders/album-1.jpg',\r\n    '/images/album-placeholders/album-2.jpg',\r\n    '/images/album-placeholders/album-3.jpg',\r\n    '/images/album-placeholders/album-4.jpg',\r\n    '/images/album-placeholders/album-5.jpg',\r\n    '/images/album-placeholders/album-6.jpg',\r\n    '/images/album-placeholders/album-7.jpg',\r\n    '/images/album-placeholders/album-8.jpg',\r\n    '/images/album-placeholders/album-9.jpg'\r\n  ];\r\n}]);\r\n\r\nblocJams.controller('Collection.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\r\n  $scope.albums = [];\r\n  for (var i = 0; i < 33; i++) {\r\n    $scope.albums.push(angular.copy(albumPicasso));\r\n  }\r\n\r\n  $scope.playAlbum = function(album){\r\n    SongPlayer.setSong(album, album.songs[0]); // Targets first song in the array.\r\n  }  \r\n}]);\r\n\r\nblocJams.controller('Album.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\r\n  $scope.album = angular.copy(albumPicasso);\r\n\r\n  var hoveredSong = null;\r\n\r\n  $scope.onHoverSong = function(song) {\r\n    hoveredSong = song;\r\n  };\r\n\r\n  $scope.offHoverSong = function(song) {\r\n    hoveredSong = null;\r\n  };\r\n\r\n  $scope.playSong = function(song) {\r\n    SongPlayer.setSong($scope.album, song);\r\n  };\r\n\r\n  $scope.pauseSong = function(song) {\r\n    SongPlayer.pause();\r\n  };\r\n\r\n  $scope.getSongState = function(song) {\r\n    if (song === SongPlayer.currentSong && SongPlayer.playing) {\r\n      return 'playing';\r\n    }\r\n    else if (song === hoveredSong) {\r\n      return 'hovered';\r\n    }\r\n    return 'default';\r\n  };\r\n}]);\r\n\r\nblocJams.controller('PlayerBar.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\r\n  $scope.songPlayer = SongPlayer;\r\n\r\n   $scope.volumeClass = function() {\r\n     return {\r\n       'fa-volume-off': SongPlayer.volume == 0,\r\n       'fa-volume-down': SongPlayer.volume <= 70 && SongPlayer.volume > 0,\r\n       'fa-volume-up': SongPlayer.volume > 70\r\n     }\r\n   } \r\n\r\n   SongPlayer.onTimeUpdate(function(event, time){\r\n     $scope.$apply(function(){\r\n       $scope.playTime = time;\r\n     });\r\n   });  \r\n}]);\r\n\r\nblocJams.service('SongPlayer', ['$rootScope', function($rootScope) {\r\n  var currentSoundFile = null;\r\n\r\n  var trackIndex = function(album, song) {\r\n    return album.songs.indexOf(song);\r\n  };\r\n\r\n  return {\r\n    currentSong: null,\r\n    currentAlbum: null,\r\n    playing: false,\r\n    volume: 90,\r\n\r\n    play: function() {\r\n      this.playing = true;\r\n      currentSoundFile.play();\r\n    },\r\n    pause: function() {\r\n      this.playing = false;\r\n      currentSoundFile.pause();\r\n    },\r\n    next: function() {\r\n      var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\r\n      currentTrackIndex++;\r\n      if (currentTrackIndex >= this.currentAlbum.songs.length) {\r\n        currentTrackIndex = 0;\r\n      }\r\n      var song = this.currentAlbum.songs[currentTrackIndex];\r\n      this.setSong(this.currentAlbum, song);\r\n    },    \r\n    previous: function() {\r\n      var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\r\n      currentTrackIndex--;\r\n      if (currentTrackIndex < 0) {\r\n        currentTrackIndex = this.currentAlbum.songs.length - 1;\r\n      }\r\n      var song = this.currentAlbum.songs[currentTrackIndex];\r\n      this.setSong(this.currentAlbum, song);\r\n    },    \r\n    seek: function(time) {\r\n      // Checks to make sure that a sound file is playing before seeking.\r\n      if(currentSoundFile) {\r\n      // Uses a Buzz method to set the time of the song.\r\n      currentSoundFile.setTime(time);\r\n      }\r\n    },\r\n    onTimeUpdate: function(callback) {\r\n      return $rootScope.$on('sound:timeupdate', callback);\r\n    },\r\n    setVolume: function(volume) {\r\n      if(currentSoundFile){\r\n        currentSoundFile.setVolume(volume);\r\n      }\r\n      this.volume = volume;\r\n    },\r\n\r\n    seek: function(time) {\r\n       // Checks to make sure that a sound file is playing before seeking.\r\n       if(currentSoundFile) {\r\n         // Uses a Buzz method to set the time of the song.\r\n         currentSoundFile.setTime(time);\r\n       }\r\n     },\r\n\r\n    setVolume: function(volume) {\r\n      if(currentSoundFile){\r\n        currentSoundFile.setVolume(volume);\r\n      }\r\n      this.volume = volume;\r\n    },  \r\n\r\n    onTimeUpdate: function(callback) {\r\n      return $rootScope.$on('sound:timeupdate', callback);\r\n    },\r\n\r\n    setSong: function(album, song) {\r\n      if (currentSoundFile) {\r\n        currentSoundFile.stop();\r\n      }\r\n\r\n      this.currentAlbum = album;\r\n      this.currentSong = song;\r\n\r\n      currentSoundFile = new buzz.sound(song.audioUrl, {\r\n        formats: [ \"mp3\" ],\r\n        preload: true\r\n      });\r\n\r\n    currentSoundFile.setVolume(this.volume);  \r\n\r\n      // currentSoundFile.bind('timeupdate', function(e){\r\n      //   $rootScope.$broadcast('sound:timeupdate', this.getTime());\r\n      // });  \r\n\r\n      this.play();      \r\n    }\r\n  };\r\n}]);\r\n\r\nblocJams.directive('slider', ['$document', function($document){\r\n   // Returns a number between 0 and 1 to determine where the mouse event happened along the slider bar.\r\n   var calculateSliderPercentFromMouseEvent = function($slider, event) {\r\n     var offsetX =  event.pageX - $slider.offset().left; // Distance from left\r\n     var sliderWidth = $slider.width(); // Width of slider\r\n     var offsetXPercent = (offsetX  / sliderWidth);\r\n     offsetXPercent = Math.max(0, offsetXPercent);\r\n     offsetXPercent = Math.min(1, offsetXPercent);\r\n     return offsetXPercent;\r\n   }\r\n\r\n  var numberFromValue = function(value, defaultValue) {\r\n    if (typeof value === 'number') {\r\n      return value;\r\n    }\r\n\r\n    if(typeof value === 'undefined') {\r\n      return defaultValue;\r\n    }\r\n\r\n    if(typeof value === 'string') {\r\n      return Number(value);\r\n    }\r\n  }  \r\n\r\n  return {\r\n    templateUrl: '/templates/directives/slider.html', // We'll create these files shortly.\r\n    replace: true,\r\n    restrict: 'E',\r\n    scope: {\r\n      onChange: '&'\r\n    },\r\n    link: function(scope, element, attributes) {\r\n       // These values represent the progress into the song/volume bar, and its max value.\r\n       // For now, we're supplying arbitrary initial and max values.\r\n       scope.value = 0;\r\n       scope.max = 100;\r\n      var $seekBar = $(element);\r\n             attributes.$observe('value', function(newValue) {\r\n        scope.value = numberFromValue(newValue, 0);\r\n      });\r\n \r\n      attributes.$observe('max', function(newValue) {\r\n        scope.max = numberFromValue(newValue, 100) || 100;\r\n      });\r\n\r\n       var percentString = function () {\r\n          var value = scope.value || 0;\r\n          var max = scope.max || 100;\r\n          percent = value / max * 100;\r\n         return percent + \"%\";\r\n       }\r\n \r\n       scope.fillStyle = function() {\r\n         return {width: percentString()};\r\n       }\r\n \r\n       scope.thumbStyle = function() {\r\n         return {left: percentString()};\r\n       }\r\n\r\n      scope.onClickSlider = function(event) {\r\n         var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\r\n         scope.value = percent * scope.max;\r\n       }\r\n\r\n      attributes.$observe('value', function(newValue) {\r\n        scope.value = numberFromValue(newValue, 0);\r\n      });\r\n\r\n      attributes.$observe('max', function(newValue) {\r\n        scope.max = numberFromValue(newValue, 100) || 100;\r\n      });\r\n\r\n   var numberFromValue = function(value, defaultValue) {\r\n     if (typeof value === 'number') {\r\n       return value;\r\n     }\r\n \r\n     if(typeof value === 'undefined') {\r\n       return defaultValue;\r\n     }\r\n \r\n     if(typeof value === 'string') {\r\n       return Number(value);\r\n     }\r\n   }\r\n\r\n\r\n      var percentString = function () {\r\n        var value = scope.value || 0;\r\n        var max = scope.max || 100;\r\n        percent = value / max * 100;\r\n        return percent + \"%\";\r\n      }\r\n\r\n      scope.fillStyle = function() {\r\n        return {width: percentString()};\r\n      }\r\n\r\n      scope.thumbStyle = function() {\r\n        return {left: percentString()};\r\n      }\r\n\r\n       scope.onClickSlider = function(event) {\r\n         var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\r\n         scope.value = percent * scope.max;\r\n          notifyCallback(scope.value);\r\n      }\r\n\r\n     var notifyCallback = function(newValue) {\r\n         if(typeof scope.onChange === 'function') {\r\n           scope.onChange({value: newValue});\r\n         }\r\n       };\r\n\r\n\r\n      scope.trackThumb = function() {\r\n        $document.bind('mousemove.thumb', function(event){\r\n          var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\r\n          scope.$apply(function() {\r\n            scope.value = percent * scope.max;\r\n            notifyCallback(scope.value);\r\n          });\r\n          \r\n        $document.bind('mouseup.thumb', function(event){\r\n           $document.unbind('mousemove.thumb');\r\n           $document.unbind('mouseup.thumb');\r\n        });\r\n      });\r\n\r\n\r\n\r\n    }\r\n }\r\n\r\n\r\n };\r\n}]);\r\n\r\n\r\n blocJams.filter('timecode', function(){\r\n   return function(seconds) {\r\n     seconds = Number.parseFloat(seconds);\r\n \r\n     // Returned when no time is provided.\r\n     if (Number.isNaN(seconds)) {\r\n       return '-:--';\r\n     }\r\n \r\n     // make it a whole number\r\n     var wholeSeconds = Math.floor(seconds);\r\n \r\n     var minutes = Math.floor(wholeSeconds / 60);\r\n \r\n     remainingSeconds = wholeSeconds % 60;\r\n \r\n     var output = minutes + ':';\r\n \r\n     // zero pad seconds, so 9 seconds should be :09\r\n     if (remainingSeconds < 10) {\r\n       output += '0';\r\n     }\r\n \r\n     output += remainingSeconds;\r\n \r\n     return output;\r\n   }\r\n })","if (document.URL.match(/\\/collection.html/)) {\n   // Wait until the HTML is fully processed.\n   $(document).ready(function() {\n     var $collection = $(\".collection-container .row\");\n     $collection.empty();\n     for (var i = 0; i < 33; i++) {\n       var $newThumbnail = buildAlbumThumbnail();\n       $collection.append($newThumbnail);\n     }\n     updateCollectionView();\n  });\n }\n\n var buildAlbumThumbnail = function() {\n    var template =\n        '<div class=\"collection-album-container col-md-2\">'\n\n      + '  <div class=\"collection-album-image-container\">'\n   + '        <img src=\"/images/album-placeholder.png\"/>'\n   + '     </div>'\n\n      + '  <div class=\"caption album-collection-info\">'\n      + '    <p>'\n      + '      <a class=\"album-name\" href=\"/album.html\"> Album Name </a>'\n      + '      <br/>'\n      + '      <a href=\"/album.html\"> Artist name </a>'\n      + '      <br/>'\n      + '      X songs'\n      + '      <br/>'\n      + '    </p>'\n      + '  </div>'\n      + '</div>'\n    + '  </div>';\n   return $(template);\n };\n\n\n  var buildAlbumOverlay = function(albumURL) {\n    var template =\n        '<div class=\"collection-album-image-overlay\">'\n      + '  <div class=\"collection-overlay-content\">'\n      + '    <a class=\"collection-overlay-button\" href=\"' + albumURL + '\">'\n      + '      <i class=\"fa fa-play\"></i>'\n      + '    </a>'\n      + '    &nbsp;'\n      + '    <a class=\"collection-overlay-button\">'\n      + '      <i class=\"fa fa-plus\"></i>'\n      + '    </a>'\n      + '  </div>'\n      + '</div>'\n      ;\n    return $(template);\n  };\n\n  var updateCollectionView = function() {\n      var $collection = $(\".collection-container .row\");\n      $collection.empty();\n\n      for (var i = 0; i < 33; i++) {\n        var $newThumbnail = buildAlbumThumbnail();\n        $collection.append($newThumbnail);\n      }\n\n       var onHover = function(event) {\n         $(this).append(buildAlbumOverlay(\"/album.html\"));\n       };\n\n         var offHover = function(event) {\n        $(this).find('.collection-album-image-overlay').remove();\n      };\n\n          $collection.find('.collection-album-image-container').hover(onHover,offHover);\n};\n\n   \n"," $(document).ready(function() {\r\n\t$('.hero-content h3').click(function(){\r\n    subText = $(this).text();\r\n    $(this).text(subText + \"!\");\t\r\n    console.log('Click action triggered.');\r\n});\r\n var onHoverAction = function(event) {\r\n     console.log('Hover action triggered.');\r\n     $(this).animate({'margin-top': '10px'});\r\n   };\r\n \r\n   var offHoverAction = function(event) {\r\n     console.log('Off-hover action triggered.');\r\n     $(this).animate({'margin-top': '0px'});\r\n   };\r\n \r\n   $('.selling-points .point').hover(onHoverAction, offHoverAction);\r\n});","var tabsContainer = \".user-profile-tabs-container\"\n var selectTabHandler = function(event) {\n   $tab = $(this);\n   $(tabsContainer + \" li\").removeClass('active');\n   $tab.parent().addClass('active');\n   selectedTabName = $tab.attr('href');\n   console.log(selectedTabName);\n   $(\".tab-pane\").addClass('hidden');\n   $(selectedTabName).removeClass('hidden');\n   event.preventDefault();\n };\n \n if (document.URL.match(/\\/profile.html/)) {\n   $(document).ready(function() {\n     var $tabs = $(tabsContainer + \" a\");\n     $tabs.click(selectTabHandler);\n     $tabs[0].click();\n   });\n }"]}